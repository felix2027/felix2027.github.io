<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.onlydoit.fun</id>
    <title>梁峯</title>
    <subtitle></subtitle>
    <icon>https://blog.onlydoit.fun/images/favicon.ico</icon>
    <link href="https://blog.onlydoit.fun" />
    <author>
      <name>梁峯</name>
    </author>
    <updated>2024-08-10T07:33:25.000Z</updated>
    <category term="博客，笔记" />
    <entry>
        <id>https://blog.onlydoit.fun/2024/08/10/Introduction-to-data-structures/</id>
        <title>数据结构绪论</title>
        <link rel="alternate" href="https://blog.onlydoit.fun/2024/08/10/Introduction-to-data-structures/"/>
        <content type="html">&lt;h2 id=&#34;数据结构绪论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构绪论&#34;&gt;#&lt;/a&gt; 数据结构绪论&lt;/h2&gt;
&lt;h3 id=&#34;数据结构概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构概述&#34;&gt;#&lt;/a&gt; 数据结构概述&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;数据结构（D,R）&lt;/strong&gt;，&lt;strong&gt;就是指数据元素之间的关系&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;（Data）数据元素集合&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;（Relation）数据元素之间的关系的集合&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;数据结构被形式地定义为 (D, R)，其中 D 是数据元素的有限集合，R 是 D 上的关系有限集合。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;数据结构&lt;/strong&gt;就是指&lt;strong&gt;指数据元素之间的关系&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;基本概念和术语&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据（Data）：&lt;strong&gt;数据&lt;/strong&gt;是客观事物的符号表示，在计算机科学中是指所有能&lt;strong&gt;输入&lt;/strong&gt;到计算机中并&lt;strong&gt;被计算机程序识别和处理的符号的总称&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;数据对象（Data Object）：是&lt;strong&gt;性质相同的数据元素的集合&lt;/strong&gt;，是数据的一个子集&lt;/li&gt;
&lt;li&gt;数据元素（Data Element）：是数据的&lt;strong&gt;基本单位&lt;/strong&gt;，在计算机程序中通常作为一个整体进行考虑和处理。&lt;strong&gt;一个数据元素可以由若干个数据项组成&lt;/strong&gt;。一个存储结点存储一个数据元素&lt;/li&gt;
&lt;li&gt;数据项（Data Item）：是数据处理中的&lt;strong&gt;最小单位&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;结构 (Structure)：数据元素之间的关系。&lt;/li&gt;
&lt;li&gt;数据结构 (Data Structure)：相互之间存在一种或多种特定关系的数据元素的集合。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;数据：对客观事物的符号表示。在计算机科学中是指所有能输入到计算机并被计算机处理的符号总称。&lt;/p&gt;
&lt;p&gt;数据元素：数据的基本单位。数据项的集合。数据的子集&lt;/p&gt;
&lt;p&gt;数据结构：相互之间的存在一种或多种特定关系的数据元素的集合&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抽象数据类型&lt;/p&gt;
&lt;p&gt;（Abstract Data Type，ADT）是抽象数据组织及与之相关的操作。用数学化的语言定义数据的逻辑结构、定义运算与具体的实现无关。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数据类型：常用数据类型包括&lt;strong&gt;基本数据类型&lt;/strong&gt;和&lt;strong&gt;构造数据类型&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抽象数据类型：（D，S，P）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;D：数据对象&lt;/li&gt;
&lt;li&gt;S：D 上的关系集&lt;/li&gt;
&lt;li&gt;P：对 D 的基本操作集（增删改查）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ADT 抽象数据类型名&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    数据对象:&amp;lt;数据对象的含义&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    数据关系:&amp;lt;数据关系的定义&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    基本操作:&amp;lt;基本操作的含义&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
 抽象数据类型的定义仅取决于它的一组&lt;strong&gt;逻辑特征&lt;/strong&gt;，而与计算机内部如何表示和实现&lt;strong&gt;无关&lt;/strong&gt;，即不论其内部结构如何变化，只要它的&lt;strong&gt;数学特征&lt;/strong&gt;不变，都不影响其外部使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;数据结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据结构&#34;&gt;#&lt;/a&gt; 数据结构&lt;/h4&gt;
&lt;p&gt;数据结构是相互之间存在&lt;strong&gt;一种或多种特定关系的数据元素的集合&lt;/strong&gt;。在任何问题中，数据元素都不是孤立存在的，而是在它们之间存在着某种关系，这种数据元素相互之间的关系称为结构（structure）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;数据结构是一门研究非数值运算的程序设计问题中计算机的&lt;strong&gt;数据&lt;/strong&gt;以及它们之间的&lt;strong&gt;关系&lt;/strong&gt;和运算等的学科。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;数据结构一般包括以下三方面内容。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;逻辑结构：&lt;/p&gt;
&lt;p&gt;数据的逻辑结构是对数据元素之间逻辑关系的描述。它与&lt;strong&gt;数据的存储无关&lt;/strong&gt;，是独立于计算机的。同一逻辑结构可以有多种结构存储，主要分为两类：&lt;strong&gt;线性结构和非线性结构&lt;/strong&gt;。其中集合、树、图属于非线型结构。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;同一种数据的逻辑结构，可以对应多种的不同&lt;strong&gt;存储结构&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;集合：元素之间无关系。&lt;/p&gt;
&lt;p&gt;结构中的数据元素之间除了 “同属一个集合 “外，别无其它的关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线性&lt;/strong&gt;：元素之间一对一的关系。&lt;/p&gt;
&lt;p&gt;结构中的数据元素之间存在着一个对一个的关系，除了第一个元素，所有的元素都有唯一前驱；除了最后一个元素，所有元素都有唯一后继。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;线性结构除了首尾结点外，其它节点只有一个&lt;strong&gt;前驱结点&lt;/strong&gt;和一个&lt;strong&gt;后继结点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;一种数据结构的元素集合 K 和它的二元关系为：k={a,b,c,d,e,f,g,h},R={&amp;lt;a,b&amp;gt;,&amp;lt;b,c&amp;gt;,&amp;lt;c,d&amp;gt;,&amp;lt;d,e&amp;gt;,&amp;lt;e,f&amp;gt;,&amp;lt;f,g&amp;gt;,&amp;lt;g,h&amp;gt;} 则该数据结构具有&lt;strong&gt;线性&lt;/strong&gt;结构&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;在线性结构中，第一个结点&lt;strong&gt;没有&lt;/strong&gt;前驱结点，其余每个结点有且只有&lt;strong&gt; 1 个&lt;/strong&gt;前驱结点；最后一个结点&lt;strong&gt;没有&lt;/strong&gt;后续结点，其余每个结点有且只有&lt;strong&gt; 1 个&lt;/strong&gt;后续结点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;树形：元素之间一对多的关系。&lt;/p&gt;
&lt;p&gt;结构中的数据元素之间存在着一个对多个的关系&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;一种数据结构的元素集合 K 和它的二元关系为：k={a,b,c,d,e,f,g,h},R={&amp;lt;d,b&amp;gt;,&amp;lt;d,g&amp;gt;,&amp;lt;b,a&amp;gt;,&amp;lt;b,c&amp;gt;,&amp;lt;g,e&amp;gt;,&amp;lt;g,h&amp;gt;,&amp;lt;e,f&amp;gt;} 则该数据结构具有&lt;strong&gt;树型&lt;/strong&gt;结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图形：元素之间多对多的关系。&lt;/p&gt;
&lt;p&gt;结构中的数据之间存在着多个对多个的关系&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;物理结构（存储结构）：两种常用存储结构&lt;/p&gt;
&lt;p&gt;常用的存储结构有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;顺序存储&lt;/strong&gt;：逻辑相邻的元素在物理上&lt;strong&gt;也相邻&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;链式存储&lt;/strong&gt;：逻辑相邻的元素在物理上&lt;strong&gt;不一定相邻&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外还有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;索引存储：在存储元素信息的同时，建立附加的索引表。用结点的索引号来确定节点存储地址。优点是检索速度快，缺点是增加了额外的索引表，会占用较多的存储空间&lt;/li&gt;
&lt;li&gt;散列存储：根据元素的关键字直接计算出该元素的存储地址，又称哈希（Hash）存储。根据结点的值确定它的存储地址。优点是检索、增加和删除节点的操作都很快。缺点是采用不好的散列函数时可能出现结点存储单元冲突，为解决冲突需要额外的时间和空间开销。&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;顺序存储&lt;/th&gt;
&lt;th&gt;链式存储&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;优点&lt;/td&gt;
&lt;td&gt;1. 可以实现随机存取&lt;br /&gt;2. 每个元素占用最少的空间&lt;/td&gt;
&lt;td&gt;充分利用所有存储单元，不会出现碎片现象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;缺点&lt;/td&gt;
&lt;td&gt;只能使用整块的存储单元，会产生较多的碎片&lt;/td&gt;
&lt;td&gt;1. 需要额外存储空间用来放下一结点的指针。&lt;br /&gt;2. 只能顺序存储。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol&gt;
&lt;li&gt;若采用顺序存储，则各个数据元素在物理上必须是连续的；若采用非顺序存储，则各个元素在物理上可以是离散的。&lt;/li&gt;
&lt;li&gt;数据的存储结构会影响存储空间分配的便利性。&lt;/li&gt;
&lt;li&gt;数据的存储结构会影响数据运算的速度。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据的运算：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;运算在逻辑结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现在存储结构&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;施加在数据上的运算包括运算的定义和实现。&lt;strong&gt;运算的定义&lt;/strong&gt;是针对&lt;strong&gt;逻辑结构&lt;/strong&gt;的，指出运算的功能；&lt;strong&gt;运算的实现&lt;/strong&gt;是针对&lt;strong&gt;存储结构&lt;/strong&gt;的，指出运算的具体操作步骤。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;数据的运算即对数据施加的操作。数据的运算&lt;strong&gt;定义在数据的逻辑结构&lt;/strong&gt;上，但是只有&lt;strong&gt;确定了存储结构&lt;/strong&gt;，才能具体实现这些运算。数据的运算通常包括以下 5 个操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插入：在指定位置上添加一个新结点。&lt;/li&gt;
&lt;li&gt;删除：删去指定位置上的节点。&lt;/li&gt;
&lt;li&gt;更新：修改某结点的值&lt;/li&gt;
&lt;li&gt;查找：寻找满足指定条件的结点及其位置&lt;/li&gt;
&lt;li&gt;排序：按指定的顺序使结点重新排列&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据类型&lt;/p&gt;
&lt;p&gt;数据类型是一个值的集合和定义在此集合上的一组操作的总称&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;原子类型&lt;/strong&gt;：其值不可再分的数据类型，如  &lt;code&gt;bool&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;结构类型&lt;/strong&gt;：其值可以再分解为若干成分（分量）的数据类型，如  &lt;code&gt;struct student&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;算法及其复杂性概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法及其复杂性概述&#34;&gt;#&lt;/a&gt; 算法及其复杂性概述&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;程序 = 数据结构 + 算法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;算法 是&lt;strong&gt;对特定问题求解步骤的一种描述&lt;/strong&gt;，是指令的有限序列。其中每一条指令表示一个或多个操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法&#34;&gt;#&lt;/a&gt; 算法&lt;/h4&gt;
&lt;h5 id=&#34;算法的五个特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的五个特性&#34;&gt;#&lt;/a&gt; 算法的五个特性&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;输入：0 个或多个输入&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;输出：1 个或多个输出&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;确定性&lt;/strong&gt;：&lt;strong&gt;每一条指令必须有确切的含义，没有二义性&lt;/strong&gt;，即对于相同的输入只能得出相同的输出。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有穷性：算法中描述的操作都是可以通过已实现的基本运算执行有限次来实现的。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可行性：一个算法描述的操作是可行的。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;算法的四个要求&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的四个要求&#34;&gt;#&lt;/a&gt; 算法的四个要求&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;正确性&lt;/strong&gt;：算法应满足具体问题需求，设计或选择的算法应能正确反映这种需求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;健壮性&lt;/strong&gt;：当输入数据非法时，算法也能适当地作出反应或处理，而不会产生莫名其妙的输出结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可读性&lt;/strong&gt;：算法主要是为了人阅读及人与人之间的交流，其次才是机器执行。可读性好有助于对算法的理解。晦涩难懂的程序易于隐藏错误，难以调试和修改。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高效率低存储&lt;/strong&gt;：效率指的是算法执行时间。若有多个算法可解决同一问题，则执行时间短的算法效率高。存储需求指的是执行过程所需的最大存储空间。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;算法复杂性的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法复杂性的概念&#34;&gt;#&lt;/a&gt; 算法复杂性的概念&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;评价一个程序优劣的重要依据是看该程序的执行需要占用多少机器资源。在各种机器资源中，最重要的是&lt;strong&gt;时间&lt;/strong&gt;资源和&lt;strong&gt;空间&lt;/strong&gt;资源。&lt;/p&gt;
&lt;p&gt;因此，在进行程序分析时，大家最关心的就是程序所用算法在运行时所要花费的时间代价和程序中使用的数据结构所占有的空间代价。通常称之为&lt;strong&gt;时间复杂度（时间代价）&lt;strong&gt;和&lt;/strong&gt;空间复杂度（空间代价）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;算法执行时间需要通过依据该算法编制的程序在计算机上运行时所消耗的时间来度量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;一个算法的效率可分为&lt;strong&gt;时间&lt;/strong&gt;效率和&lt;strong&gt;空间&lt;/strong&gt;效率&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;算法的时间复杂度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的时间复杂度&#34;&gt;#&lt;/a&gt; 算法的时间复杂度&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;时间复杂度是指算法中所有语句的频度（执行次数）之和。&lt;/p&gt;
&lt;p&gt;在一般情况下，算法中 “基本操作” 重复执行的次数是问题规模 n 的某个函数 f (n)，算法的时间度量记作： &lt;code&gt;T(n) = O(f(n))&lt;/code&gt; ，它表示随&lt;strong&gt;问题规模 n&lt;/strong&gt; 的增大，算法执行时间的增长率和 f (n) 的增长率相同。&lt;/p&gt;
&lt;p&gt;时间复杂度（T (n)）取决于基本操作的执行次数，也叫频度。基本操作的频度用 T (n) 表示。&lt;/p&gt;
&lt;p&gt;由于算法时间复杂度分析只考虑相对于问题规模 n 的增长率，因而在难以精确计算基本操作执行次数的情况下，只要求出它关于 n 的增长率即可。我们可以在计算任何算法运行时间代价的时候，&lt;strong&gt;忽略所有的常数和低次项，用大 O 表示法来表示算法的时间复杂度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先分析基本操作的频度，然后取数量级，数量级最高的频度决定了时间复杂度的数量级。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g. 下述程序段中语句 &lt;code&gt;s+=j;&lt;/code&gt;  的频度是？&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;s=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;j&amp;lt;m;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(j=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;j&amp;lt;=i;j++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s+=j;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;根据高斯公式：&amp;amp;a+…+b=(a+b)(b-a+1)/2&amp;amp;\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;2+3+4+...+m=(m+2)(m-1)/2&amp;amp;\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;答案为：&amp;amp;(m+2)(m-1)/2&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;时间复杂度的推导过程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;分析基本操作的频度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;取数量级&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数量级最高的频度决定了时间复杂度的数量级&lt;/p&gt;
&lt;p&gt;常用技巧&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;加法:&amp;amp;O(f(n))+O(g(n))=O(max(f(n),g(n)))\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;乘法:&amp;amp;O(f(n)*O(g(n)))=O(f(n)*g(n))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;常数阶&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1+1+1&amp;amp;=&amp;amp;3	//求运行次数之和 \\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1&amp;amp;=&amp;amp;n^0	//用1取代所有加法常数\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;T(n)&amp;amp;=&amp;amp;n^0	//保留最高阶项&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;T(n)=O(f(n))=O(1)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; sum = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,n=&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum=(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;+n)*n/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;printf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;,sum);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线性阶&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;分析基本操作的频度，然后取数量级 &amp;amp;T(n)=O(1)+O(n)&amp;amp;\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;化简&amp;amp;T(n)=O(n)&amp;amp;\\&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;T(n)=O(f(n))=O(n)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//代码块内O(1)的步骤&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对数阶&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;分析基本操作的频度 &amp;amp;2^t+1^\frac&amp;#123;n&amp;#125;&amp;#123;2&amp;#125;&amp;amp;\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;取数量级 &amp;amp;T(n)=O(\log_&amp;#123;2&amp;#125;^\frac&amp;#123;n&amp;#125;&amp;#123;2&amp;#125;-1)+O(1)&amp;amp;\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;化简&amp;amp;T(n)=O(f(n))=O(\log_2^n)&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; x=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(x&amp;lt;n/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nlog_2^n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;外层 n，内层 log&lt;sub&gt;2&lt;/sub&gt;n&lt;/p&gt;
&lt;/blockquote&gt;
  &lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i,x=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(x&amp;lt;n/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;平方阶&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;n*n+1	// 求运行次数之和&lt;br&gt;
 n&lt;sup&gt;2&lt;/sup&gt;+n&lt;sup&gt;0&lt;/sup&gt;	// 用 1 取代所有加法常数&lt;br&gt;
 n&lt;sup&gt;2&lt;/sup&gt;	// 保留最高阶&lt;br&gt;
 T (n)=O (f (n))=O (n&lt;sup&gt;2&lt;/sup&gt;)&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;n*n+1	\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n^2+n^0	\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;n^2\\	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;T(n)=O(f(n))=O(n^2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(j=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;j&amp;lt;n;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常见的时间复杂度比较&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;执行次数函数  &amp;amp;O阶&amp;amp;       非正式用语\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12                 &amp;amp;O(1)&amp;amp;         常数阶\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2n+3               &amp;amp;O(n)&amp;amp;         线性阶\\ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3n^2+2n+1         &amp;amp;O(n^2)&amp;amp;       平方阶\\  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5log_2^n+20      &amp;amp;O(log_2^n)&amp;amp;  对数阶\\  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2n+3nlog_2^n+19  &amp;amp;O(nlog_2^n)&amp;amp;  nlogn阶\\    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6n^3+2n^2+3n+4   &amp;amp;O(n^3)&amp;amp;      立方阶\\&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2^n             &amp;amp;O(2^n)&amp;amp;      指数阶 \\&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;常用的时间复杂度所消耗的时间从小到大依次是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常对幂指阶&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;O(1)&amp;lt;O(logn)&amp;lt;O(n)&amp;lt;O(nlogn)&amp;lt;O(n^2)&amp;lt;O(n^3)&amp;lt;O(2^n)&amp;lt;O(n!)&amp;lt;O(n^n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最坏情况与平均情况&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对算法的分析，一种方法是计算所有情况的平均值，这种时间复杂度的计算方法称为&lt;strong&gt;平均&lt;/strong&gt;时间复杂度。另一种方法是计算最坏情况下的时间复杂度，这种方法称为&lt;strong&gt;最坏&lt;/strong&gt;时间复杂度。一般在没有特殊说明的情况下，都是指最坏时间复杂度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;分析下面算法，给出最大语句频度&lt;strong&gt; n (n-1)/2&lt;/strong&gt;, 该算法的二时间复杂度是&lt;strong&gt; O (n^2)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;n;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(j=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;j&amp;lt;i;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a[i][j]=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;算法的空间复杂度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#算法的空间复杂度&#34;&gt;#&lt;/a&gt; 算法的空间复杂度&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;算法的空间复杂度通过计算算法所需存储空间实现，算法空间复杂度的计算公式基座：S (n)=O (f (n)), 表示随着问题规模 n 的增大，算法运行所需存储量的增长与 f (n）的增长率&lt;/p&gt;
&lt;p&gt;算法的存储量包括：&lt;/p&gt;
&lt;p&gt;​    输入程序所占&lt;strong&gt;空间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    程序本身所占&lt;strong&gt;空间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    辅助变量所占&lt;strong&gt;空间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;S(n)=O(f(n))&lt;/p&gt;
&lt;p&gt;若输入数据所占空间只取决与问题本身，和算法无关，则只需要分析出输入和程序之外的额外空间。&lt;/p&gt;
&lt;p&gt;算法原地工作指的是额外空间相对于输入数据量来说是常数。&lt;/p&gt;
&lt;p&gt;n 个元素数组排序，不使用额外的空间（随着 n 的增长而增长的空间叫额外空间），空间复杂度就是 O (1)。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;RevArray(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; a[],&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i,j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,j=n&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;i&amp;lt;j;i++,j--)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     a[i]+=a[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     a[j]=a[i]-a[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     a[i]-=a[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	执行了n/2次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	所以T(n)=n/2=O(n)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	辅助空间只有i,j,所以S(n)=2=O(1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;	而因为这里使用的辅助空间，不会随着问题的规模变化而变化，简而言之，就是常量级别的，我们就称其为原地工作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;空间复杂度 S (n) 定义为该算法所耗费的存储空间，它是问题规模 n 的函数。&lt;/p&gt;
&lt;p&gt;计算公式： &lt;code&gt;S(n) = O(f(n))&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;空间复杂度的主要关注点是&lt;strong&gt;辅助空间&lt;/strong&gt;，即算法所需的额外空间（除了输入数据的存储空间外）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空间复杂度不包括输入和输出所需的空间。&lt;/li&gt;
&lt;li&gt;主要衡量算法的辅助空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论问题规模怎么变，算法运行所需的内存空间都是固定的常量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;普通程序&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到所占空间大小与问题规模相关的变量&lt;/li&gt;
&lt;li&gt;分析所占空间 x 与问题规模 n 的关系 x=f (n)&lt;/li&gt;
&lt;li&gt;x 的数量级 O (x) 就是算法空间复杂度 S (n)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;递归程序&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到递归调用的深度 x 与问题规模 n 的关系 x=f (n)&lt;/li&gt;
&lt;li&gt;x 的数量级 O (x) 就是算法空间复杂度 S (n)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;注：有的算法各层函数所需存储空间不同，分析方法略有不同&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;S(O)=O(n^2)+O(n)+n(1)=O(n^2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; n)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; flag[n][n];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; other[n];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//S(O)=O(n^2)+O(n)+n(1)=O(n^2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;S(O)=O(n)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; n)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(n&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        test(--n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//S(O)=O(n)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;S(O)=O(n^2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;void test(int n)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int flag[4]=&amp;#123;0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if(n&amp;gt;1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        test(--n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    //S(O)=O(n^2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="数据结构" scheme="https://blog.onlydoit.fun/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/" />
        <category term="教程" scheme="https://blog.onlydoit.fun/tags/%E6%95%99%E7%A8%8B/" />
        <updated>2024-08-10T07:33:25.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.onlydoit.fun/2024/08/05/create-new-blog-with-hexo/</id>
        <title>使用 Hexo 发布文章</title>
        <link rel="alternate" href="https://blog.onlydoit.fun/2024/08/05/create-new-blog-with-hexo/"/>
        <content type="html">&lt;h1 id=&#34;使用-hexo-发布文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用-hexo-发布文章&#34;&gt;#&lt;/a&gt; 使用 Hexo 发布文章&lt;/h1&gt;
&lt;h2 id=&#34;新建文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新建文章&#34;&gt;#&lt;/a&gt; 新建文章&lt;/h2&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 新建文章，layout 为 scaffold/ 下创建的模板，默认的有 draft|paper|post 对应 草稿|页面|文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo new [layout] title       &lt;span class=&#34;comment&#34;&gt;# 或 hexo n [layout] title&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;草稿管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#草稿管理&#34;&gt;#&lt;/a&gt; 草稿管理&lt;/h2&gt;
&lt;h3 id=&#34;新建草稿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新建草稿&#34;&gt;#&lt;/a&gt; 新建草稿&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 新建草稿&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 草稿会保存在 source/_drafts 目录中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo new draft &amp;lt;title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;查看草稿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看草稿&#34;&gt;#&lt;/a&gt; 查看草稿&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 启动本地服务器查看草稿&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo s --draft  &lt;span class=&#34;comment&#34;&gt;# 或者 hexo server --draft&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;发布草稿&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#发布草稿&#34;&gt;#&lt;/a&gt; 发布草稿&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将草稿发布为正式文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 草稿会从 source/_drafts 移动到 source/_posts 中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo publish &amp;lt;title&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;示例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例&#34;&gt;#&lt;/a&gt; 示例&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 新建一篇标题为 &amp;quot;待发布文章&amp;quot; 的草稿&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo new draft &lt;span class=&#34;string&#34;&gt;&amp;quot;待发布文章&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看草稿&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo s --draft&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将 &amp;quot;待发布文章&amp;quot; 草稿发布为正式文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo publish &lt;span class=&#34;string&#34;&gt;&amp;quot;待发布文章&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;文章模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文章模板&#34;&gt;#&lt;/a&gt; 文章模板&lt;/h2&gt;
&lt;p&gt;默认新建的文章中，Front-matter 中的内容很少，可以在 scaffold 中修改模板，之后新建文章时再修改会方便些。&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# scaffold/post.md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;title:&lt;/span&gt; &amp;#123;&amp;#123; &lt;span class=&#34;string&#34;&gt;title&lt;/span&gt; &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;date:&lt;/span&gt; &amp;#123;&amp;#123; &lt;span class=&#34;string&#34;&gt;date&lt;/span&gt; &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;author:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Felix&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 布局 post|page|draft 文章|页面|草稿&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;layout:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 更新日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;updated:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 开启文章的评论功能&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;comments:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  - &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  - &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 分类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  - &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  - &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 简述 正文内容均会被隐藏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;description:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用自定义封面 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;img:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 是否置顶 true，或者去掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;top:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 封面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# cover:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#是否对文件加密	需要下载hexo-blog-encrypt才能实现加密，添加密码视为启用加密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;password:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;abstract:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;这是一篇加密文章，需要密码才能继续阅读。&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;message:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;当前文章暂不对外可见，请输入密码后查看！&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;wrong_pass_message:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;抱歉，您输入的密码错误，请检查后重新输入。&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;wrong_hash_message:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;示例-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#示例-2&#34;&gt;#&lt;/a&gt; 示例&lt;/h3&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;title:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;我的第一篇文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;date:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2024-08-05 10:00:00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;author:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Felix&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;layout:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;comments:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Hexo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;博客&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;技术&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;博客搭建&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;description:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;这是一篇关于如何使用&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Hexo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;发布文章的示例。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;top:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;img:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;/images/hexo-cover.jpg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分类&#34;&gt;#&lt;/a&gt; 分类&lt;/h2&gt;
&lt;h3 id=&#34;子分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#子分类&#34;&gt;#&lt;/a&gt; 子分类&lt;/h3&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Sports&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Baseball&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;Sports&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;Baseball&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;多个分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多个分类&#34;&gt;#&lt;/a&gt; 多个分类&lt;/h3&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;Sports&lt;/span&gt;]  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;Play&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;categories:&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;Sports&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;Baseball&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;Play&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="blog" scheme="https://blog.onlydoit.fun/categories/blog/" />
        <updated>2024-08-05T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.onlydoit.fun/2024/08/03/how-to-build-a-site-with-hexo/</id>
        <title>使用 Hexo 搭建网站，并部署至github</title>
        <link rel="alternate" href="https://blog.onlydoit.fun/2024/08/03/how-to-build-a-site-with-hexo/"/>
        <content type="html">&lt;h2 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; 环境准备&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;以 ubuntu 为例&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;确保系统环境是最新的，并安装必要的软件：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 更新软件包列表并升级已安装的软件包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; apt update &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; apt upgrade -y&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装 Git 和 npm，如果不使用 Git 可以省略&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; apt install git npm -y&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建并初始化 Hexo 博客：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 创建一个名为 blogsTest 的目录，可以选择其他名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; ~/blogsTest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 进入创建的目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ~/blogsTest/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 全局安装 Hexo 命令行工具&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;sudo&lt;/span&gt; npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 初始化一个名为 myblog 的 Hexo 博客，可以选择其他名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo init myblog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 进入初始化的博客目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; myblog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装 Hexo 部署插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装 Hexo 项目所需的所有依赖包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 清理 Hexo 缓存文件，生成静态文件并启动本地服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo clean &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 此时可以通过浏览器访问服务器的 IP:4000 来查看博客效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;项目目录结构及文件解释&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;node_modules  &lt;span class=&#34;comment&#34;&gt;# 存放项目所需的所有依赖包，通过 npm 安装的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public        &lt;span class=&#34;comment&#34;&gt;# 生成的静态文件会存放在这个目录，部署时会使用到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scaffolds     &lt;span class=&#34;comment&#34;&gt;# 用于定义新文章、页面等内容的模板&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt;        &lt;span class=&#34;comment&#34;&gt;# 存放源文件的地方，主要包括 Markdown 文件和资源文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;themes        &lt;span class=&#34;comment&#34;&gt;# 用于存放 Hexo 博客的主题，可以自定义或下载其他主题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_config.yml   &lt;span class=&#34;comment&#34;&gt;# Hexo 的全局配置文件，包含站点配置、插件配置等信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;db.json       &lt;span class=&#34;comment&#34;&gt;# 存储 Hexo 解析源文件后的数据，用于生成页面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;package.json  &lt;span class=&#34;comment&#34;&gt;# 项目的配置文件，记录项目所需的依赖包和项目信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;一键部署到github&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一键部署到github&#34;&gt;#&lt;/a&gt; 一键部署到 github&lt;/h2&gt;
&lt;h3 id=&#34;1-创建-github-仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-创建-github-仓库&#34;&gt;#&lt;/a&gt; 1. 创建 GitHub 仓库&lt;/h3&gt;
&lt;p&gt;在 GitHub 上新建一个仓库存放博客文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前往 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29t&#34;&gt;GitHub&lt;/span&gt; 并登录。&lt;/li&gt;
&lt;li&gt;点击  &lt;code&gt;+&lt;/code&gt;  并选择  &lt;code&gt;New repository&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Repository name&lt;/code&gt;  建议设置为  &lt;code&gt;&amp;lt;yourUserName&amp;gt;.github.io&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;其他配置保持默认，点击  &lt;code&gt;Create repository&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;在新建的项目设置中  &lt;code&gt;Settings -&amp;gt; Pages&lt;/code&gt;  中将  &lt;code&gt;Branch&lt;/code&gt;  改为  &lt;code&gt;main&lt;/code&gt;  并点击  &lt;code&gt;Save&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-生成-ssh-密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-生成-ssh-密钥&#34;&gt;#&lt;/a&gt; 2. 生成 SSH 密钥&lt;/h3&gt;
&lt;p&gt;生成 SSH 密钥，以便将代码推送到 GitHub：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 进入 SSH 配置目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; ~/.ssh/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 配置 Git 的全局用户名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;yourUserName&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 配置 Git 的全局邮箱&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;yourEmail&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 生成 SSH 密钥对，并指定文件名为 hexo-deploy-key，邮箱作为注释&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa -f hexo-deploy-key -C &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;yourEmail&amp;gt;&amp;quot;&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 记得将公钥(.pub)提交到 GitHub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3-添加-ssh-公钥到-github&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-添加-ssh-公钥到-github&#34;&gt;#&lt;/a&gt; 3. 添加 SSH 公钥到 GitHub&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在 GitHub 中点击  &lt;code&gt;Settings&lt;/code&gt;  -&amp;gt;  &lt;code&gt;SSH and GPG keys&lt;/code&gt;  -&amp;gt;  &lt;code&gt;New SSH Key&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Title&lt;/code&gt;  随意， &lt;code&gt;Key&lt;/code&gt;  复制  &lt;code&gt;hexo-deploy-key.pub&lt;/code&gt;  中的内容。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-确认-ssh-连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-确认-ssh-连接&#34;&gt;#&lt;/a&gt; 4. 确认 SSH 连接&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 确认是否成功连接到 GitHub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果运行完上面的命令没有出现类似以下信息：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Hi &amp;lt;yourUserName&amp;gt;! You&amp;#x27;ve successfully authenticated, but GitHub does not provide shell access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 可以尝试以下步骤指定 SSH 密钥：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 启动 SSH agent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;eval&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&lt;span class=&#34;subst&#34;&gt;$(ssh-agent -s)&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 添加生成的私钥到 SSH agent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh-add ~/.ssh/hexo-deploy-key  &lt;span class=&#34;comment&#34;&gt;# 请替换为你的密钥路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次确认是否成功连接到 GitHub&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;5-指定github仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-指定github仓库&#34;&gt;#&lt;/a&gt; 5. 指定 github 仓库&lt;/h3&gt;
&lt;p&gt;修改  &lt;code&gt;_config.yml&lt;/code&gt;  文件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt;  和  &lt;code&gt;repo&lt;/code&gt;  中的  &lt;code&gt;&amp;lt;yourUserName&amp;gt;&lt;/code&gt;  应替换为实际的 GitHub 用户名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;branch&lt;/code&gt;  的值  &lt;code&gt;main&lt;/code&gt;  应与实际 GitHub 仓库的默认分支名一致（通常为  &lt;code&gt;main&lt;/code&gt;  或  &lt;code&gt;master&lt;/code&gt; ）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 修改 url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;url:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;https://&amp;lt;yourUserName&amp;gt;.github.io&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 修改 repo 和 branch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;deploy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;repo:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;git@github.com:&amp;lt;yourUserName&amp;gt;/&amp;lt;yourUserName&amp;gt;.github.io.git&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;branch:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;6-部署命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6-部署命令&#34;&gt;#&lt;/a&gt; 6. 部署命令&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 清理 Hexo 生成的临时文件和缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 生成静态文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 测试效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 发布&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一键部署&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo clean &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;github-actions自动化部署-hexo博客&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#github-actions自动化部署-hexo博客&#34;&gt;#&lt;/a&gt; Github Actions 自动化部署 Hexo 博客&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;将本地部署博客的内容交给 GitHub Actions 执行，使修改或增加博文更加便捷。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-创建私有仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-创建私有仓库&#34;&gt;#&lt;/a&gt; 1. 创建私有仓库&lt;/h3&gt;
&lt;p&gt;新建一个私有仓库，仓库名可随意，这里以  &lt;code&gt;myblog&lt;/code&gt;  为例。&lt;/p&gt;
&lt;p&gt;此时你会有两个仓库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公有仓库：已编译的  &lt;code&gt;&amp;lt;yourUserName&amp;gt;.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;私有仓库：未编译的  &lt;code&gt;myblog&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-获取-github-token&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-获取-github-token&#34;&gt;#&lt;/a&gt; 2. 获取 GitHub Token&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;前往 GitHub 设置： &lt;code&gt;Settings -&amp;gt; Developer settings -&amp;gt; Personal access tokens -&amp;gt; Tokens (classic) -&amp;gt; Generate new token -&amp;gt; Generate new token (classic)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将  &lt;code&gt;Expiration&lt;/code&gt;  修改为  &lt;code&gt;No expiration&lt;/code&gt; （永不过期）。&lt;/li&gt;
&lt;li&gt;勾选  &lt;code&gt;repo&lt;/code&gt;  权限。&lt;/li&gt;
&lt;li&gt;点击生成并复制生成的 Token（只会出现一次）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-设置-github-token&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-设置-github-token&#34;&gt;#&lt;/a&gt; 3. 设置 GitHub Token&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开  &lt;code&gt;myblog&lt;/code&gt;  仓库的  &lt;code&gt;Settings -&amp;gt; Secrets and variables -&amp;gt; Actions -&amp;gt; New repository secret&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Name&lt;/code&gt;  为  &lt;code&gt;GITHUBTOKEN&lt;/code&gt; ， &lt;code&gt;Secret&lt;/code&gt;  为刚刚创建的 Token。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-添加-workflows&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4-添加-workflows&#34;&gt;#&lt;/a&gt; 4. 添加 Workflows&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新建一个文件夹  &lt;code&gt;.github/workflows/&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在该文件夹下新建一个文件  &lt;code&gt;deploy.yml&lt;/code&gt; 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;确保  &lt;code&gt;&amp;lt;yourUserName&amp;gt;&lt;/code&gt;  替换为实际的 GitHub 用户名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;env&lt;/code&gt;  中  &lt;code&gt;PERSONAL_TOKEN&lt;/code&gt;  的值应为 GitHub Token 的名称，与设置的 secret 名称一致（此处  &lt;code&gt;GITHUBTOKEN&lt;/code&gt; ）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Deploying&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Hexo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;project&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;GitHub&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Pages&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;on:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;push:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;branches:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;build-and-deploy:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;runs-on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;steps:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Checkout&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;uses:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;actions/checkout@v3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;with:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;fetch-depth:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Build&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Deploy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;uses:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;theme-keep/hexo-deploy-github-pages-action@master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;env:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;PERSONAL_TOKEN:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;$&amp;#123;&amp;#123;&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;secrets.GITHUBTOKEN&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;PUBLISH_REPOSITORY:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;lt;yourUserName&amp;gt;/&amp;lt;yourUserName&amp;gt;.github.io&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;BRANCH:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;main&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;PUBLISH_DIR:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;./public&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;5-将源码上传到私有仓库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-将源码上传到私有仓库&#34;&gt;#&lt;/a&gt; 5. 将源码上传到私有仓库&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;确保  &lt;code&gt;&amp;lt;yourUserName&amp;gt;&lt;/code&gt;  替换为实际的 GitHub 用户名。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git remote add origin&lt;/code&gt;  中的  &lt;code&gt;&amp;lt;yourUserName&amp;gt;&lt;/code&gt;  和仓库名  &lt;code&gt;myblog&lt;/code&gt;  应根据实际情况调整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 初始化 Git 仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 添加当前目录文件到缓存区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 提交缓存区内容到本地库，并备注 &amp;quot;first commit&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;first commit&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 利用 SSH 关联远程仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add origin git@github.com:&amp;lt;yourUserName&amp;gt;/myblog.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将本地库的所有内容推送到远程库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git push -u origin main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="blog" scheme="https://blog.onlydoit.fun/categories/blog/" />
        <category term="搭建网站" scheme="https://blog.onlydoit.fun/tags/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/" />
        <updated>2024-08-03T16:41:10.000Z</updated>
    </entry>
</feed>
